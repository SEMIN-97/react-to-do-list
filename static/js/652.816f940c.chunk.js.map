{"version":3,"file":"static/js/652.816f940c.chunk.js","mappings":"yJAIA,MAAMA,EAAwB,CAC5B,CACEC,GAAI,EACJC,KAAM,mDACNC,SAAS,GAEX,CACEF,GAAI,EACJC,KAAM,yEACNC,SAAS,GAEX,CACEF,GAAI,EACJC,KAAM,4DACNC,SAAS,IAIAC,EAAW,CACtBC,EAAAA,EAAKC,IAAkC,UAAU,IACxCC,EAAAA,EAAaC,KAAKR,KAE3BK,EAAAA,EAAKI,KAAqB,UAAUC,UAAwB,IAAjB,QAAEC,GAASC,EACpD,MAAMC,QAAaF,EAAQH,OACrBM,EAASC,KAAKC,OAAOhB,EAAMiB,KAAIC,GAAQA,EAAKjB,MAAO,EAOzD,OANAD,EAAMmB,QAAQ,CACZlB,GAAIa,EACJZ,KAAMW,EAAKX,KACXC,SAAS,IAGJ,IAAII,EAAAA,EAAa,KAAM,CAAEa,OAAQ,KAAM,IAEhDf,EAAAA,EAAKgB,MAAiC,cAAcX,UAAgC,IAAzB,OAAEY,EAAM,QAAEX,GAASY,EAC5E,MAAMV,QAAaF,EAAQH,OACrBgB,EAAWxB,EAAMyB,MAAKC,IAAA,IAAC,GAACzB,GAAGyB,EAAA,OAAKzB,IAAO0B,OAAOL,EAAOrB,GAAG,IAE9D,OAAKuB,GAILA,EAASrB,QAAUU,EAAKV,QACjB,IAAII,EAAAA,EAAa,KAAM,CAAEa,OAAQ,OAJ/B,IAAIb,EAAAA,EAAa,KAAM,CAAEa,OAAQ,KAII,IAEhDf,EAAAA,EAAKuB,OAAyB,cAAclB,UAAuB,IAAhB,OAAEY,GAAQO,EAC3D,MAAMC,EAAc9B,EAAM+B,WAAUC,IAAA,IAAC,GAAC/B,GAAG+B,EAAA,OAAK/B,IAAO0B,OAAOL,EAAOrB,GAAG,IAEtE,OAAI,EAAI6B,EACC,IAAIvB,EAAAA,EAAa,KAAM,CAAEa,OAAQ,OAG1CpB,EAAMiC,OAAOH,EAAa,GACnB,IAAIvB,EAAAA,EAAa,KAAM,CAAEa,OAAQ,MAAM,KCpDrCc,GAASC,EAAAA,EAAAA,MAAe/B,E","sources":["mocks/handlers.ts","mocks/browser.ts"],"sourcesContent":["import { http, HttpResponse } from 'msw';\n\nimport { ToDoDTO, UpdateToDoParams } from '../types/todoType';\n\nconst todos: Array<ToDoDTO> = [\n  {\n    id: 1,\n    text: 'TO DO LIST를 만들어보자!',\n    checked: true\n  },\n  {\n    id: 2,\n    text: '+ 버튼으로 아이템 추가하기',\n    checked: false\n  },\n  {\n    id: 3,\n    text: '다크/라이트 테마 변경',\n    checked: false\n  }\n];\n\nexport const handlers = [\n  http.get<never, never, Array<ToDoDTO>>('/todos', () => {\n    return HttpResponse.json(todos);\n  }),\n  http.post<never, ToDoDTO>('/todos', async ({ request }) => {\n    const data = await request.json();\n    const nextId = Math.max(...todos.map(todo => todo.id)) + 1;\n    todos.unshift({\n      id: nextId,\n      text: data.text,\n      checked: false\n    });\n\n    return new HttpResponse(null, { status: 201 });\n  }),\n  http.patch<UpdateToDoParams, ToDoDTO>('/todos/:id', async ({ params, request }) => {\n    const data = await request.json();\n    const findItem = todos.find(({id}) => id === Number(params.id));\n\n    if (!findItem) {\n      return new HttpResponse(null, { status: 404 });\n    }\n\n    findItem.checked = data.checked;\n    return new HttpResponse(null, { status: 204 });\n  }),\n  http.delete<UpdateToDoParams>('/todos/:id', async ({ params }) => {\n    const findItemIdx = todos.findIndex(({id}) => id === Number(params.id));\n\n    if (0 > findItemIdx) {\n      return new HttpResponse(null, { status: 404 });\n    }\n\n    todos.splice(findItemIdx, 1);\n    return new HttpResponse(null, { status: 200 });\n  })\n];\n\n","import { setupWorker } from 'msw/browser';\n\nimport { handlers } from './handlers';\n\nexport const worker = setupWorker(...handlers);\n"],"names":["todos","id","text","checked","handlers","http","get","HttpResponse","json","post","async","request","_ref","data","nextId","Math","max","map","todo","unshift","status","patch","params","_ref2","findItem","find","_ref3","Number","delete","_ref4","findItemIdx","findIndex","_ref5","splice","worker","setupWorker"],"sourceRoot":""}